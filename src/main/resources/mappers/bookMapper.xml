<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="example.실습.실습4.BookMapper">
    <!--  1. 책 단일 등록( 생성된 도서번호 반환 ) -->
    <!-- int saveBook( BookDto bookDto );-->
    <insert id="saveBook" parameterType="example.실습.실습4.BookDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO books(title, stock) values( #{title}, #{stock} )
    </insert>

    <!--  2.  책 일괄 등록-->
    <!--    int saveAllBook( List<BookDto> bookDtos ); -->
    <insert id="saveAllBook" parameterType="list" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO books(title, stock) values
        <foreach collection="list" item="b" separator=",">
        ( #{b.title}, #{b.stock} )
        </foreach>
    </insert>


    <!--  3. 대출 기록 검색 -->
    <!--  //- 대출한 사람 또는 대출한도서명 으로 조회-->
    <!--  //- 조건이 없을 경우 전체 조회-->
    <!--    List<BookDto> findBook();-->



    <!--    // 4.ALTER 이용한 테이블 수정2개 controller/service/mapper-->
    <!--    // 4-1. 책books 테이블에 price 가격(int) 필드 추가-->
    <!--    // 4-2. 책books 테이블에 title 책이름 필드 (longtext) 필드 수정-->
    <select id="eidtBookColumn" >
<!--        alter table books add column price int;-->
        select * from books;
    </select>

    <update id="eidtBookColumn2" >
        alter table books add column price int;
<!--        select * from books;-->
    </update>

<!--    <update id="eidtBookColumn2">-->
<!--        alter table books add column price int;-->
<!--    </update>-->

<!--    // 실습6. [ 조건2 ] view 생성 기능 2개 controller/service/mapper <UPDATE>-->
<!--    //    1. 대출기록 상세 뷰 생성 ( 책 + 대출기록 JOIN )-->
<!--    //    2. 평균보다 많은 재고를 가진 도서 조회 뷰 생성-->

    <update id="view1Book" >
        create or replace view rentals_view111 as
            select
                b.id AS book_id_pk,
                b.title,
                b.stock,
                r.id AS rental_id_pk,
                r.member,
                r.rent_date,
                r.return_date,
                r.book_id
        from books b inner join rentals r on b.id = r.book_id; <!-- 컬럼명이 같으면 뷰에서 조인이 안된다. -->

<!--        create or replace view booksMost_view  as-->
<!--            select * from books-->
<!--            where stock > (select avg(stock) from books);-->
    </update>

    <update id="view2Book" >
        create or replace view booksMost_view22  as
            select * from books
            where stock > (select avg(stock) from books);
    </update>

    <select id="view3Book" resultType="java.util.Map">
        select * from rentals_view111;
    </select>

    <select id="view4Book" resultType="example.실습.실습4.BookDto">
        select * from booksMost_view22;
    </select>


</mapper>