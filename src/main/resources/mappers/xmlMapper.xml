<?xml version="1.0" encoding="UTF-8" ?>
<!-- XML이란? 마크업을 이용한 데이터 저장(설정값)/전달(매핑)/교환(API) 마크업/프로그래밍 언어 -->
<!-- HTML? 마크업을 이용한 웹페이지 마크업 언어 -->

<!-- XML 파일내 mabatis 라이브러리 설정 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- xml과 매핑할 인터페이스 설정, src JAVA 이하 경로 지정 >  -->
<mapper namespace="example.day13.XmlMapper">

    <!-- 1. 등록  id="추상메소드명" 매핑을 하겠다. parameterType="매개변수(클래스) 경로 타입"  -->
    <insert id="save" parameterType="example.day13.StudentDto" useGeneratedKeys="true" keyProperty="sno" >
        INSERT INTO student(name, kor, math ) values(#{name}, #{kor}, #{math} )
    </insert>


    <!--  2. 전체 조회  -->
    <!--  <select id="추상메소드명" resultType="반환타입 파일경로">  -->
    <select id="findAll" resultType="example.day13.StudentDto">
        select * from student;
    </select>


    <!--  3. 개별 조회  -->
    <!--  <select id="추상메소드명" resultType="반환타입 파일경로">  -->
    <select id="find" resultType="example.day13.StudentDto">
        select * from student where sno = #{sno} ;
    </select>

    <!-- 4. 개별 삭제 -->
    <delete id="delete" parameterType="int" >
        delete from student where sno = #{ sno };
    </delete>

    <!-- 5. 개별 수정 : 클래스는 경로로  -->
    <update id="update" parameterType="example.day13.StudentDto">
        update student set kor = #{kor }, math = #{ math } where sno = #{ sno };
    </update>

    <!--  where 1 = 1 ===> <where></where>  -->
    <select id="query2" parameterType="int" resultType="example.day13.StudentDto">
        select * from student where 1 = 1
        <if test="kor != null">
            and kor >= #{ kor }
        </if>
    </select>

    <!-- 파라미터가 2개 이상 일 경우에는 dto로 묶거나 생략/// StudentDto query3( String name, int math );-->
    <!-- 파라미터 타입이 기본형이 경우는 생략 가능,  2개 이상 일 경우에는 dto는(개발자가 직접 만든) 생략이 안된다.   -->
    <!-- parameterType="String, int" (X), parameterType="example.day13.StudentDto" or  생략 -->
    <!-- 문자열을 연결해주는 함수( 문자열, 문자열 ) :   concat where 1= 1 -->
    <!-- and 는 조건이 2개 이상 일경우에 사용하는 쿼리문   -->
    <!--    '%', #{name}, '%' 값이 포함 된 -->
    <select id="query3" resultType="example.day13.StudentDto">
   <!--  select * from student where 1= 1-->
        select * from student
        <where>
            <if test="name != null">
                and name like concat('%', #{name}, '%' )
            </if>
            <if test=" math != 0 ">
                and math >= #{ math }
            </if>
        </where>
    </select>

    <!--  8. 여러개 학생 등록( forEach )-->
    <!--  자바는 매핑을 할 때마다 통신을 하기 때문에 대량의 데이터는 모아놨다가 처리 -->
    <!--  <foreach collection="타입(list)" item="student(아무거나)" separator=", 반복되는 sql의 구분문자">  -->
    <insert id="saveAll" parameterType="list" useGeneratedKeys="true" keyProperty="sno">
        insert into student(name, kor, math ) values
        <foreach collection="list" item="s" separator=",">
            ( #{s.name}, #{s.kor}, #{s.math} )
        </foreach>
    </insert>


</mapper>